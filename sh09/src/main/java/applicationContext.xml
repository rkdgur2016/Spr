<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">
	
	<!--  트랜잭션 Advice 설정 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<!-- 트랜잭션 적용 : up으로 시작하는 메서드에 적용한다. 
				 name : 트랜잭션 적용 메서드의 이름
				 read-only : 데이터베이스 접근 방식 : 읽기 전용
				 rollback-for : 트랜잭션을 롤백할 예외
				-->
			<tx:method name="*Tx" read-only="false" rollback-for="Exception"/>
			<!-- 트랜잭션 제외 -->
			<tx:method name="*" read-only="true"/>
		</tx:attributes>
	</tx:advice>
	
	<aop:config>
		<aop:pointcut expression="execution( * com.pcwk.ehr..service.*Impl.*Tx(..))" id="txPointCut"/>
		<aop:advisor advice-ref="txAdvice" pointcut-ref="txPointCut"/>
	</aop:config>
	
	<tx:annotation-driven proxy-target-class="true" transaction-manager="transactionManager" />
	
	<bean id="dataSource" class="com.zaxxer.hikari.HikariDataSource">
			<property name="driverClassName" value="oracle.jdbc.driver.OracleDriver"/>
			<property name="jdbcUrl" value="jdbc:oracle:thin:@192.168.0.21:1521:xe"/>
			<property name="username" value="scott"/>
			<property name="password" value="pcwk"/>
			
			<!-- Optional settings -->
			<property name="maximumPoolSize" value="10"></property>
			<property name="minimumIdle" value="5"></property>
			<property name="connectionTimeout" value="30000"></property>
			<property name="idleTimeout" value="600000"></property>
			<property name="maxLifetime" value="1800000"></property>
	</bean>

	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>


	<bean id="dummyMailService" class="com.pcwk.ehr.user.service.DummyMailService"></bean>
	
	<bean id="mailSenderImpl" class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<property name="host" value="smtp.naver.com"></property>
		<property name="port" value="465"></property>
		<property name="username" value="limrkdgur2016@naver.com"></property>
		<property name="password" value="rkdgur2016!"></property>
		<property name="defaultEncoding" value="UTF-8"></property>
		<property name="javaMailProperties">
			<props>
				<prop key="mail.smtp.host">smtp.naver.com</prop>
                <prop key="mail.smtp.port">465</prop>
                <prop key="mail.smtp.auth">true</prop>
                <prop key="mail.smtp.ssl.protocols">TLSv1.2</prop>
                <prop key="mail.smtp.ssl.enable">true</prop>
                <prop key="mail.smtp.ssl.trust">smtp.naver.com</prop>
                <prop key="mail.debug">true</prop>			
			</props>
		</property>
	</bean>

	<bean id="userService" class="com.pcwk.ehr.user.service.UserServiceImpl">
			<property name="mailSender" ref="dummyMailService"></property>
			<property name="userDao" ref="userDao"></property>
	</bean>
	
	<bean id="testUserService" class="com.pcwk.ehr.user.service.TestUserService">
		<constructor-arg value="human04"></constructor-arg>
		<property name="mailSender" ref="dummyMailService"></property>
		<property name="userDao" ref="userDao"></property>
	</bean>
	
	
	<bean id="userDao" class="com.pcwk.ehr.user.dao.UserDaoJdbc">
		<!--  setter 주입  -->
		<property name="dataSource" ref="dataSource"/>
	</bean>
	
</beans>